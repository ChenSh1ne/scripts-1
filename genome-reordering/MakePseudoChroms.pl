#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;

my $reord;
my $fasta;
my $chrom;
my $out;
my $spacer = 1000;

my $R;
my $F;
my %fa;
my $O;

&initialize;

# Process
print "Beginning to make pseudochroms\n";
my $seq;
my $prev_chr = 'NA';
my $new_chr;

while( <$R> ){

    chomp;

    my @l = split( "\t", $_ );
    
    # #scaf scafLen scafMin scafMax chr chrMin chrMax strand num_proteins median_pos
    # scaffold1 5157367 2208 5155441 Hmel210001o 2918 17800337 + 323 2530394.5

    # If we're hitting a new chromosome, print out the old one and
    # get the current scaffold.

    $new_chr = $l[4];
    
    if( $new_chr ne $prev_chr ){

	# If we have a pseudoseq, print
	if( $seq ){

	    if( $prev_chr eq 'NA' ){ $prev_chr = $new_chr; }
	    
	    $seq =~s/(.{0,80})/$1\n/g;	    
	    print $O ">" . $prev_chr . "\n" . $seq . "\n";

	}

	# If its + strand, fine, but if it's - need RC	
	if( $l[7] eq '-' ){
	    $seq = reverse $fa{$l[0]};;
	    $seq =~tr/ATCGatcg/TAGCtagc/;
	} else {
	    $seq = $fa{$l[0]};
	}

	$new_chr = $l[4];
	
    } else { # same chr

	#Keep adding
	my $nseq;
	
	if( $l[7] eq '-' ){	    
	    $nseq = reverse $fa{$l[0]};
	    $nseq =~tr/ATCGatcg/TAGCtagc/;
	} else {
	    $nseq = $fa{$l[0]};
	}

	$seq .= $spacer x 'N' . $nseq;
    }
}

close( $O );
close( $R );


	


##################################### SUBROUTINES #######################################

sub initialize{

    GetOptions( 'fasta:s' => \$fasta,
		'reordering:s' => \$reord,
		'out:s' => \$out,
		'spacer:i' => \$spacer );

    unless( $fasta && $reord ){
	print "\n\nERROR: You must provide both reordering information and the draft fasta file.\n";
	die &usage;
    } else {

	print "Reading in fasta file..\n";
	open( $F, '<', $fasta ) || die "\nERROR: Cannot open $fasta\n";

	my $seq;
	my $name;
	
	while( <$F> ){ 

	    chomp;
	    if( $_ =~/^>/ ){

		if( $seq ){
		    $fa{$name} = $seq;
		}

		$name = $_; $name =~s/>//;
		$seq = '';
	    } else {

		$seq .= $_;
	    }
	}

	$fa{$name} = $seq;

	print "Finished reading in fasta file...\n";
	# Open reordering and output files
	open( $R, "sort -k 5,5 -k6,6n $reord | grep -v chrMax |" ) || die "\n\nERROR: Cannot open $reord\n";
	open( $O, '>', $out ) || die "\n\nERROR: Cannot open outfile $out\n";
    }
    
}

sub usage{

    my $u = <<END;

usage: perl MakePseudoChroms.pl --fasta <draft.fa> --reordering <draft.to.ref.mapped>
                                --out <outfile.fa> --spacer 1000

This script will take chromosome assignments generated by OrderScaffoldsByBlatProteins.pl
and output pseudochromosomes of assigned draft scaffolds separated by Ns.

fasta       Draft assembly fasta file.

reordering  .mapped file output by OrderScaffoldsByBlatProteins.pl

out         Output fasta file name.

spacer      Number of Ns to separate succesive draft scaffolds by. 

END

    print $u;

}
